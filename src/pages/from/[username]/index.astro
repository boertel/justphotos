---
import Layout from "@layouts/Layout.astro";
import Sidebar from "@components/Sidebar.astro";
import Logo from "@components/Logo.astro";
import Photo from "@components/Photo.astro";
import { cache, CachedResponse } from "@utils/index";

const response = await cache(
  { locals: Astro.locals, request: Astro.request },
  async ({ R2 }) => {
    const prefix = `${Astro.params.username}/original`;
    const { objects } = await R2.list({
      prefix,
      include: ["customMetadata"],
      limit: 100,
    });
    const photos = objects
      .map((object) => {
        return object.customMetadata;
      })
      .sort((a, z) => z.timestamp - a.timestamp);
    return new CachedResponse(photos);
  },
);

const photos = await response.json();
const { username } = Astro.params;
---

<Layout
  title="Benjamin Oertel"
  class="[grid-template-areas:'logo''sidebar''content'] md:[grid-template-areas:'logo_content''sidebar_content']"
>
  <Logo href="/" />

  <Sidebar class="flex flex-col p-4 gap-4">
    <h1 class="text-6xl font-mono tracking-tighter">Benjamin Oertel</h1>
    <h2 class="text-muted flex items-center">
      <a href={`/from/${username}`} class="hover:underline" tabindex="-1"
        >@{username}</a
      >
    </h2>
  </Sidebar>

  <section
    class="sm:columns-1 md:columns-2 lg:columns-3 gap-4 p-4"
    style="grid-area: content"
  >
    {
      photos.map((photo, index) => (
        <figure
          class="grid break-inside-avoid mb-4 relative group"
          style="grid-template-rows: 1fr auto;"
        >
          <a
            href={`/from/${username}/${photo.id}`}
            class="outline-2 focus:outline-primary outline-none outline-offset-0 outline-primary/0 transition-opacity group/photo overflow-hidden rounded-md"
          >
            <Photo
              id={photo.id}
              photo={photo}
              loading={index < 6 ? "eager" : "lazy"}
            />
          </a>
        </figure>
      ))
    }
  </section>
</Layout>
